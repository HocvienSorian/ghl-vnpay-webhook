// pages/api/vnpay-handler.js
import { verifyVnpResponse } from '../vnpay.js';
import { updateInvoiceInGHL, fetchContactDetails } from '../ghl.js';

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Ch·ªâ h·ªó tr·ª£ POST' });
  }

  const { chargeId, transactionId, type } = req.body;

  console.log('üì• Nh·∫≠n y√™u c·∫ßu verify t·ª´ pay.html:', req.body);

  if (type !== 'verify' || !chargeId || !transactionId) {
    return res.status(400).json({ error: 'Thi·∫øu ho·∫∑c sai tham s·ªë verify' });
  }

  try {
    // üìù Gi·∫£ l·∫≠p ki·ªÉm tra tr·∫°ng th√°i giao d·ªãch t·∫°i VNPAY
    const isValid = true; // TODO: G·ªçi API QueryDR c·ªßa VNPAY ƒë·ªÉ x√°c th·ª±c th·ª±c t·∫ø

    if (!isValid) {
      console.warn('‚ùå Giao d·ªãch kh√¥ng h·ª£p l·ªá ho·∫∑c ch∆∞a th√†nh c√¥ng');
      return res.status(200).json({ failed: true });
    }

    // üü¢ N·∫øu c·∫ßn, l·∫•y contact t·ª´ GHL v√† update invoice
    const contact = await fetchContactDetails(transactionId);
    if (!contact) {
      console.error('‚ùå Kh√¥ng t√¨m th·∫•y contact trong GHL v·ªõi transactionId:', transactionId);
    } else {
      console.log('‚úÖ L·∫•y contact th√†nh c√¥ng:', contact.name);
      await updateInvoiceInGHL(transactionId, {
        status: 'paid',
        note: `Thanh to√°n th√†nh c√¥ng qua VNPAY - ChargeID: ${chargeId}`
      });
    }

    console.log('‚úÖ Giao d·ªãch x√°c minh th√†nh c√¥ng');
    return res.status(200).json({ success: true });
  } catch (err) {
    console.error('üî• L·ªói khi verify giao d·ªãch:', err);
    return res.status(500).json({ error: 'L·ªói n·ªôi b·ªô khi verify' });
  }
}
