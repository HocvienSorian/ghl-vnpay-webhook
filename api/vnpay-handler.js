// pages/api/vnpay-handler.js
import axios from 'axios';

const GHL_WEBHOOK_URL = "https://backend.leadconnectorhq.com/payments/custom-provider/webhook";
const PRIVATE_PROVIDER_API_KEY = process.env.GHL_PRIVATE_PROVIDER_API_KEY;

async function sendPaymentCapturedWebhook({ chargeId, ghlTransactionId, amount, locationId }) {
  if (!PRIVATE_PROVIDER_API_KEY) {
    console.error("üö® PRIVATE_PROVIDER_API_KEY kh√¥ng t·ªìn t·∫°i. Check .env file!");
    throw new Error("PRIVATE_PROVIDER_API_KEY missing");
  }

  const payload = {
    event: "payment.captured",
    chargeId,
    ghlTransactionId,
    chargeSnapshot: {
      status: "succeeded",
      amount: amount || 0,
      chargeId,
      chargedAt: Math.floor(Date.now() / 1000)
    },
    locationId,
    apiKey: PRIVATE_PROVIDER_API_KEY
  };

  console.log("üì¶ [Webhook] Payload g·ª≠i ƒë·∫øn GHL:");
  console.log(JSON.stringify(payload, null, 2));

  try {
    const res = await axios.post(GHL_WEBHOOK_URL, payload, {
      headers: { "Content-Type": "application/json" },
      timeout: 7000
    });

    console.log("‚úÖ [Webhook] G·ª≠i th√†nh c√¥ng:");
    console.log("Status:", res.status);
    console.log("Data:", JSON.stringify(res.data, null, 2));
    return res.data;
  } catch (err) {
    console.error("‚ùå [Webhook] L·ªói g·ª≠i ƒë·∫øn GHL:");
    console.error("Status:", err.response?.status);
    console.error("Data:", JSON.stringify(err.response?.data, null, 2));
    throw err;
  }
}

export default async function handler(req, res) {
  console.log("üì• [Handler] VNPAY ReturnUrl/IPN g·ªçi backend");
  console.log("Method:", req.method);
  console.log("Query params:", JSON.stringify(req.query, null, 2));

  const vnp_ResponseCode = req.query.vnp_ResponseCode;
  const vnp_TransactionNo = req.query.vnp_TransactionNo;
  const vnp_TxnRef = req.query.vnp_TxnRef;

  if (!vnp_ResponseCode || !vnp_TransactionNo || !vnp_TxnRef) {
    console.error("‚ùå Thi·∫øu tham s·ªë t·ª´ VNPAY");
    return res.status(400).send("‚ùå Thi·∫øu tham s·ªë t·ª´ VNPAY");
  }

  if (vnp_ResponseCode === '00') {
    console.log("‚úÖ Giao d·ªãch VNPAY th√†nh c√¥ng. ƒêang g·ª≠i webhook ƒë·∫øn GHL...");
    try {
      await sendPaymentCapturedWebhook({
        chargeId: vnp_TransactionNo,
        ghlTransactionId: vnp_TxnRef,
        amount: 100000, // üéØ L·∫•y t·ª´ DB ho·∫∑c fallback
        locationId: "adLYHnkHxGxHU7ofn3RN" // üéØ L·∫•y t·ª´ DB ho·∫∑c fallback
      });
      return res.status(200).send("‚úÖ ƒê√£ g·ª≠i webhook GHL");
    } catch (err) {
      console.error("üî• L·ªói khi g·ª≠i webhook:", err.message);
      return res.status(500).send("‚ùå L·ªói khi g·ª≠i webhook");
    }
  } else {
    console.warn("‚ö†Ô∏è Giao d·ªãch VNPAY th·∫•t b·∫°i:", vnp_ResponseCode);
    return res.status(200).send("‚ö†Ô∏è Giao d·ªãch th·∫•t b·∫°i");
  }
}
